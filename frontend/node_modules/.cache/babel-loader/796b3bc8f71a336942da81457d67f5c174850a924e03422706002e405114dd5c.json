{"ast":null,"code":"import Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  components: {\n    Footer,\n    Middle,\n    Header\n  },\n  data: function () {\n    return {\n      user: null,\n      posts: [],\n      users: [],\n      postId: null\n    };\n  },\n  beforeMount() {\n    if (localStorage.getItem(\"jwt\") && !this.user) {\n      this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n    }\n    axios.get(\"/api/1/posts\").then(response => {\n      this.posts = response.data;\n    });\n    axios.get(\"/api/1/users\").then(response => {\n      this.users = response.data;\n    });\n  },\n  beforeCreate() {\n    this.$root.$on(\"onEnter\", (login, password) => {\n      if (password === \"\") {\n        this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n        return;\n      }\n      axios.post(\"/api/1/jwt\", {\n        login,\n        password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onEnterValidationError\", error.response.data);\n      });\n    });\n    this.$root.$on(\"onRegister\", (login, name, password) => {\n      axios.post(\"/api/1/users/register\", {\n        login,\n        name,\n        password\n      }).then(response => {\n        axios.get(\"/api/1/users\").then(newResponse => {\n          this.users = newResponse.data;\n        });\n        this.$root.$emit(\"onEnter\", response.data.login, response.data.password);\n      }).catch(error => {\n        this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n      });\n    });\n    this.$root.$on(\"onShowPost\", post => {\n      this.post = post;\n      this.$root.$emit(\"onChangePage\", \"Post\");\n    });\n    this.$root.$on(\"onJwt\", jwt => {\n      localStorage.setItem(\"jwt\", jwt);\n      axios.get(\"/api/1/users/auth\", {\n        params: {\n          jwt\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.$root.$emit(\"onChangePage\", \"Index\");\n      }).catch(() => this.$root.$emit(\"onLogout\"));\n    });\n    this.$root.$on(\"onLogout\", () => {\n      localStorage.removeItem(\"jwt\");\n      this.user = null;\n    });\n    this.$root.$on(\"onWritePost\", (title, text) => {\n      if (this.user) {\n        axios.post(\"/api/1/posts/create\", {\n          title,\n          text,\n          user: this.user\n        }).then(() => {\n          axios.get(\"/api/1/posts\").then(response => {\n            this.posts = response.data;\n          });\n          this.$root.$emit(\"onChangePage\", \"Index\");\n        }).catch(error => {\n          this.$root.$emit(\"onWritePostValidationError\", error.response.data);\n        });\n      } else {\n        this.$root.$emit(\"onWritePostValidationError\", \"No access\");\n      }\n    });\n  }\n};","map":{"version":3,"names":["Header","Middle","Footer","axios","name","components","data","user","posts","users","postId","beforeMount","localStorage","getItem","$root","$emit","get","then","response","beforeCreate","$on","login","password","post","setItem","catch","error","newResponse","jwt","params","removeItem","title","text"],"sources":["src/App.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <Header :user=\"user\"/>\n        <Middle :posts=\"posts\" :users=\"users\" :post=\"post\"/>\n        <Footer/>\n    </div>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\"\n\nexport default {\n    name: 'App',\n    components: {\n        Footer,\n        Middle,\n        Header\n    },\n    data: function () {\n        return {\n            user: null,\n            posts: [],\n            users: [],\n            postId: null,\n        }\n    },\n    beforeMount() {\n        if (localStorage.getItem(\"jwt\") && !this.user) {\n            this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n        }\n\n        axios.get(\"/api/1/posts\").then(response => {\n            this.posts = response.data;\n        });\n\n        axios.get(\"/api/1/users\").then(response => {\n            this.users = response.data;\n        });\n    },\n    beforeCreate() {\n        this.$root.$on(\"onEnter\", (login, password) => {\n            if (password === \"\") {\n                this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n                return;\n            }\n\n            axios.post(\"/api/1/jwt\", {\n                    login, password\n            }).then(response => {\n                localStorage.setItem(\"jwt\", response.data);\n                this.$root.$emit(\"onJwt\", response.data);\n            }).catch(error => {\n                this.$root.$emit(\"onEnterValidationError\", error.response.data);\n            });\n        });\n\n\n        this.$root.$on(\"onRegister\", (login, name, password) => {\n            axios.post(\"/api/1/users/register\", {\n                login, name, password\n            }).then(response => {\n                axios.get(\"/api/1/users\").then(newResponse => {\n                    this.users = newResponse.data;\n                });\n                this.$root.$emit(\"onEnter\", response.data.login, response.data.password);\n            }).catch(error => {\n                this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n            });\n        });\n\n\n        this.$root.$on(\"onShowPost\", post => {\n            this.post = post\n            this.$root.$emit(\"onChangePage\", \"Post\");\n        })\n\n        this.$root.$on(\"onJwt\", (jwt) => {\n            localStorage.setItem(\"jwt\", jwt);\n\n            axios.get(\"/api/1/users/auth\", {\n                params: {\n                    jwt\n                }\n            }).then(response => {\n                this.user = response.data;\n                this.$root.$emit(\"onChangePage\", \"Index\");\n            }).catch(() => this.$root.$emit(\"onLogout\"))\n        });\n\n        this.$root.$on(\"onLogout\", () => {\n            localStorage.removeItem(\"jwt\");\n            this.user = null;\n        });\n\n        this.$root.$on(\"onWritePost\", (title, text) => {\n            if (this.user) {\n                axios.post(\"/api/1/posts/create\", {\n                    title, text, user: this.user\n                }).then(() => {\n                    axios.get(\"/api/1/posts\").then(response => {\n                        this.posts = response.data;\n                    });\n                    this.$root.$emit(\"onChangePage\", \"Index\")\n                }).catch(error => {\n                    this.$root.$emit(\"onWritePostValidationError\", error.response.data);\n                });\n            } else {\n                this.$root.$emit(\"onWritePostValidationError\", \"No access\");\n            }\n        });\n    }\n}\n</script>\n\n<style>\n#app {\n\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}